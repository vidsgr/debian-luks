{{- $arch     := or .arch     "amd64" -}}
{{- $suite    := or .suite    "stable" -}}
{{- $user     := or .user     "admin" -}}
{{- $pass     := or .pass     "password" -}}
{{- $hostname := or .hostname "netdebian" -}}
{{- $image    := or .image    (printf "netdebian-%s-%s.tgz" $suite $arch) -}}

architecture: {{ $arch }}

actions:
  - action: debootstrap
    description: create Debian filesystem
    suite: {{ $suite }}
    components: [ main, contrib, non-free ]
    mirror: http://cdn.debian.net/debian/

  - action: run
    description: preseed variables
    chroot: true
    script: scripts/preseed.sh

  - action: apt
    recommends: true
    description: add kernel and firmware
    packages: [ linux-image-amd64, firmware-linux, firmware-atheros, firmware-linux-nonfree ]

  - action: apt
    recommends: true
    description: add more packages
    packages: [ grub-pc, cryptsetup, sudo, openssh-server, rsync, parted, shadowsocks-libev, pmacct, network-manager, curl, wget ,python3, python, python-pip, python3-pip, libdbus-1-dev, libdbus-glib-1-2, libdbus-glib-1-dev, openssl, openssh-server, apt-transport-https, dirmngr, software-properties-common, gnupg2]

  - action: run
    description: cleanup packages after install
    chroot: true
    command: apt clean

  - action: run
    description: set hostname
    chroot: true
    command: echo {{ $hostname }} > /etc/hostname

  - action: run
    description: set hosts file
    chroot: true
    script: scripts/setup-hosts.sh {{ $hostname }}

  - action: run
    description: add a new user (will be in sudoers)
    chroot: true
    script: scripts/setup-user.sh {{ $user }} "{{ $pass }}"


  - action: pack
    file: {{ $image }}
    compression: gz
